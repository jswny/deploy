name: CI
on: [push]

jobs:
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: -e SC2029
  hadolint:
    name: Hadolint Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: brpaz/hadolint-action@master
  hadolint-app:
    name: Hadolint Demo App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: brpaz/hadolint-action@master
        with:
          dockerfile: 'app/Dockerfile'
  go-lint:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v1
        with:
          version: v1.29
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15'
      - name: Get Dependencies
        run: |
          go mod download
          go get github.com/axw/gocov/gocov
      - name: Run Tests
        run: go test -v -coverprofile=cover.out ./...
      - name: Coverage Report
        run: gocov convert cover.out | gocov report
      - name: Line Coverage Report
        run: gocov convert cover.out | gocov annotate -
  deploy-example-beta:
    runs-on: ubuntu-latest
    name: Deploy Example App
    if: ${{ !contains(github.ref, 'refs/tags') }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          repository: ${{ format('{0}-{1}', github.repository, 'example')}}
          path: 'app'
          tag_with_ref: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy
        uses: ./
        id: deploy
        env:
          SAD_REPOSITORY: ${{ github.repository }}
          SAD_SERVER: ${{ secrets.SERVER }}
          SAD_USERNAME: ${{ secrets.USERNAME }}
          SAD_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SAD_CHANNEL: 'beta'
          SAD_FOO: ${{ secrets.FOO_BETA }}
          SAD_BAR: ${{ secrets.BAR_BETA }}
  deploy-example-stable:
    runs-on: ubuntu-latest
    name: Deploy Stable Demo App
    if: ${{ contains(github.ref, 'refs/tags') }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          repository: ${{ github.repository }}
          path: 'app'
          tag_with_ref: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy
        uses: ./
        id: deploy
        with:
          deploy_server: ${{ secrets.deploy_server }}
          deploy_username: ${{ secrets.deploy_username }}
          deploy_root_dir: '/srv'
          ssh_key: ${{ secrets.ssh_key }}
          path: 'app'
          channel: 'stable'
          debug: ${{ secrets.actions_step_debug }}
          env_vars: 'FOO,BAR'
        env:
          FOO: ${{ secrets.FOO_STABLE }}
          BAR: ${{ secrets.BAR_STABLE }}
