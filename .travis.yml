language: shell

services:
  - docker

env:
  global:
    - TEST_CMD='echo simulated test!'
    - SSH_KEY_TYPES='rsa,dsa,ecdsa'
    - DEPLOY_ARTIFACTS_PATH='artifacts'
    - DEPLOY_ROOT_DIR='/srv'
    - REPOSITORY="$(basename $TRAVIS_REPO_SLUG)"
    - BRANCH="${TRAVIS_BRANCH}"
    - BETA_BRANCH='develop'
    - DOCKER_IMAGE_TAG=$(bash "${DEPLOY_ARTIFACTS_PATH}"/generate_docker_image_tag.sh)
    - DOCKER_IMAGE_NAME="${DOCKER_USERNAME}"/"${REPOSITORY}":"${DOCKER_IMAGE_TAG}"
    - ENCRYPTED_DEPLOY_KEY_PATH="deploy_key.enc"
    - _ENCRYPTED_DEPLOY_KEY_CYPHER_KEY="${encrypted_dfdcfd5172af_key}"
    - ENCRYPTED_DEPLOY_KEY_IV="${encrypted_dfdcfd5172af_iv}"
    - DOCKER_IMAGE_SHELL="sh"
    - HADOLINT_VERSION="1.17.5"
    - HADOLINT="${HOME}/hadolint"

install:
  - curl -sLo ${HADOLINT} "https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-$(uname -s)-$(uname -m)" && chmod 700 ${HADOLINT}

before_deploy:
  - eval "$(ssh-agent -s)"
  - bash "${DEPLOY_ARTIFACTS_PATH}"/setup_ssh.sh

script:
  - bash -c 'shopt -s globstar nullglob; shellcheck --exclude=SC2029 artifacts/*.{sh,ksh,bash}'
  - ${HADOLINT} --ignore=DL3025 Dockerfile
  - docker build --target build --tag "$REPOSITORY" .
  - docker run "$REPOSITORY" ${DOCKER_IMAGE_SHELL} -c "$TEST_CMD"

notifications:
  slack:
    rooms:
      - secure: "YqEqx5FbDn3b862USUh3I65u0MylCGibsR7ZcsiQAMlYZB9GQzHV179igEAaIAzwFHlstaxsjvQPSc59i/lpXKqe8jlLD7eHguKt4EuEp1xi/1X6kVs/r6Pq+r+xgxj1TTe5KR4Tz2vdMC+V8FyN4sItn2tppdSXQQDU6+hfAHZx0YFejN1ezRkwc7t4T30cv+9pvTp/bSG8wzQXniT3P/5GKT2RyqfgqVxVeR4F6DsEqXytk/KvruA/jiGf9lgWm1WFodRI89L++HoeqA3kF9nd0ktxUEYw9+7hNTnzwWIMgsQRdNUEwmb+und60N0jjsqqx3g2d9q7k7kULuPRGpxWjF9Wr7bLSCLlhq7ryYdiPNq7dX/f7kll5tk0/O90w0DHOl+vAJCiekixq1N4PE3FQP2i34UqC0G++iz1K6WNoQbBdJrooSN1hoLMRangOVnczP1NXTxUdKwSRmrZ+NbIelqeXHoRQjKWZxq4R54KStO3lv/TR5ofNwLed9G78sNm9ywPCInp1/HV1QkZRBBuziqk78OkVvTQsQdB9p1qeVyxjsOG37Z7utvbRR5nCs8DWxQHcrCaRU4AhI1xf2Px7lfvrxO/JkWoUyQN+QWD0Xy7xTrBtq9doMDvqMO9SsR3mwwZK1YFaX2AQmmK67VcFvy9nBMl1LQJFY69iuQ="
    on_success: never
  email: false

deploy:
  - provider: script
    script: bash "${DEPLOY_ARTIFACTS_PATH}"/docker_push.sh
    skip_cleanup: true
    on:
      all_branches: true

  - provider: script
    script: bash "${DEPLOY_ARTIFACTS_PATH}"/deploy.sh
    skip_cleanup: true
    on:
      all_branches: true
