language: shell

services:
  - docker

env:
  global:
    - TEST_CMD='echo simulated test!'
    - SSH_KEY_TYPES='rsa,dsa,ecdsa'
    - DEPLOY_ARTIFACTS_PATH='artifacts'
    - DEPLOY_ROOT_DIR='/srv'
    - REPOSITORY="$(basename $TRAVIS_REPO_SLUG)"
    - BRANCH="${TRAVIS_BRANCH}"
    - BETA_BRANCH='develop'
    - DOCKER_IMAGE_TAG=$(bash "${DEPLOY_ARTIFACTS_PATH}"/generate_docker_image_tag.sh)
    - DOCKER_IMAGE_NAME="${DOCKER_USERNAME}"/"${REPOSITORY}":"${DOCKER_IMAGE_TAG}"
    - ENCRYPTED_DEPLOY_KEY_PATH="deploy_key.enc"
    - _ENCRYPTED_DEPLOY_KEY_CYPHER_KEY="${encrypted_dfdcfd5172af_key}"
    - ENCRYPTED_DEPLOY_KEY_IV="${encrypted_dfdcfd5172af_iv}"
    - DOCKER_IMAGE_SHELL="sh"
    - HADOLINT_VERSION="1.17.5"
    - HADOLINT="${HOME}/hadolint"

install:
  - curl -sLo ${HADOLINT} "https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-$(uname -s)-$(uname -m)" && chmod 700 ${HADOLINT}

before_deploy:
  - eval "$(ssh-agent -s)"
  - bash "${DEPLOY_ARTIFACTS_PATH}"/setup_ssh.sh

script:
  - bash -c 'shopt -s globstar nullglob; shellcheck --exclude=SC2029 artifacts/*.{sh,ksh,bash}'
  - ${HADOLINT} --ignore=DL3025 Dockerfile
  - docker build --target build --tag "$REPOSITORY" .
  - docker run "$REPOSITORY" ${DOCKER_IMAGE_SHELL} -c "$TEST_CMD"

notifications:
  slack:
    rooms:
      secure: "rELYqKpjqd3JxpVrUxmxHnDj+DZ+mTc0tpkfG2kDCIOssNB47CBEz2ThO0E1n3Dk1Z/Lu9QowwYpcXJd4K0I1c+QjWLEMVUAwWtPOSWKcp2kRvaD/qhFFMW+Lx3vkH3cvdSTkZVJuQ4yfRTEBS72qzDdfXhldWw+eIrFKOLIDhi9ownT0m+VmsfjWfBDxRNR9zf5rmPA2EdkELyt/WZP+W8E0jJPerZLBy1mFx6u4fZVAtU2Hlo3HOpDfTS0Ol5tLo0QB9vAzth8B+8L8qQjwAvrqRzax1NoNb5ceDri+QKTQB7e/ByzfKOYdq0RyvXW/C0xt8dSlOujPZgE0rX5J7ZWGlL3EdowO0ctzrbcjp9Rhi+EofAPyPV7OR2cEZ04P4qlqMKHZrvaiiFAt7bDY7pkOgesgGNIbW0cOe+TPdMrfaFpV7axbq8b1vKJ/ijAIjhP1lKIwFVJRKV9/xGzEjTuR97hH33RuU/rhjy1/wwh/iN0t1eGW+tECZm+r+JoXyXE5jS+5uDyrd/eDLBF2VHq1evVokCAmgVwiwn8XlJNaitsL3NvvcRW+jAi2E+TG3Ms+BZro3PYj8gNlrTacapGuiUmRwMuGFHITqt6rLdMQvmhcViMObiMyg40TswNk0OqQiuENktKMvPwYwGdn3FTR+p4/uqRMK53/es034Y="
    on_success: never
  email: false

deploy:
  - provider: script
    script: bash "${DEPLOY_ARTIFACTS_PATH}"/docker_push.sh
    skip_cleanup: true
    on:
      all_branches: true

  - provider: script
    script: bash "${DEPLOY_ARTIFACTS_PATH}"/deploy.sh
    skip_cleanup: true
    on:
      all_branches: true
